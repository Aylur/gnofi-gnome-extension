#!/usr/bin/env nu

let GIT_URL = open metadata.json | get url

let DONATORS = "https://raw.githubusercontent.com/Aylur/gnofi-gnome-extension/refs/heads/main/donators.json"

let banner = $"/*
 * Do not edit this file, it is generated!
 * Source code is available at ($GIT_URL)
 */
"

def bundle [input: string, output: string, --version: string] {
    let devel = ($version | describe) == "nothing"

    let version = $version | default (try {
        git diff --quiet
        $"(git rev-parse --short HEAD)"
    } catch {
        "dirty"
    })

    let doc = node docs/mdast.ts (cat docs/IPC.md)

    (esbuild
        --bundle $input
        --outfile=$"($output)"
        --format=esm
        --sourcemap=inline
        --external:gi://*
        --external:resource://*
        --external:gettext
        --supported:decorators=false
        --banner:js=$"($banner)"
        --define:import.meta.IPC_DOC=$"($doc)"
        --define:import.meta.VERSION=$'"($version)"'
        --define:import.meta.DEVEL=$"($devel)"
        --define:import.meta.EMAIL_API=$'"($env | get GNOFI_EMAIL_API)"'
        --define:import.meta.GIT_URL=$'"($GIT_URL)"'
        --define:import.meta.EXAMPLES_URL=$'"($GIT_URL)/tree/main/examples"'
        --define:import.meta.DONATORS_LIST_URL=$'"($DONATORS)"'
        --define:import.meta.BUGS_URL=$'"($GIT_URL)/issues/new"'
    )
}

def "main build" [--version: string] {
    rm -rf dist

    let schema = open metadata.json | get settings-schema

    mkdir dist/schemas
    mkdir dist/data
    mkdir dist/po
    bundle ./src/extension/index dist/extension.js
    bundle ./src/prefs/index dist/prefs.js --version $version

    (esbuild
        --bundle ./src/extension/stylesheet.css
        --outfile=dist/stylesheet.css
        --target=firefox116
    )

    cat ./src/schemas/gschema.xml
    | str replace "@id@" $schema
    | str replace "@path@" $"/($schema | split row "." | str join "/")/"
    | save $"./dist/schemas/($schema).gschema.xml"

    glib-compile-schemas ./dist/schemas

    cp metadata.json dist
    cp -r src/prefs/data/* dist/data

    # FIXME: remove try block when there is at least one translation
    try { cp -r po/*.po dist/po }

    rm dist/data/index.ts
}

def "main install" [
    --prefix: string # Defaults to ~/.local
] {
    let uuid = open metadata.json | get uuid
    let prefix = $prefix | default $"($env.HOME)/.local"
    let path = $"($prefix)/share/gnome-shell/extensions/($uuid)"

    rm -rf $path
    cp -r dist $path
    rm -rf dist
}

def "main dev" [] {
    main build
    main install
    dbus-run-session -- gnome-shell --nested --wayland
}

def "main gettext" [] {
    let uuid = open metadata.json | get uuid
    mkdir po

    let files = git ls-files "*.ts" "*.tsx" | split row "\n"

    (xgettext ...$files
        --from-code=UTF-8
        --output=$"po/($uuid).pot"
        --language=JavaScript
        --keyword=p:1c,2
        --keyword=t
        --keyword=n:1,2
    )
}

def "main pack" [] {
    main build --version $env.GNOFI_VERSION
    gnome-extensions pack --podir=po --extra-source=data --force dist
}

def main [] {
    nu $env.CURRENT_FILE --help
}
